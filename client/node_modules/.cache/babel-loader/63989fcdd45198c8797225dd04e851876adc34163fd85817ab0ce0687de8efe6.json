{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\AI create CV\\\\client\\\\src\\\\pages\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, TextField, Button, Typography, Alert, CircularProgress } from '@mui/material';\nimport api from '../config/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      await api.post('/auth/forgot-password', {\n        email\n      });\n      toast.success('Nếu email tồn tại, một email đặt lại mật khẩu đã được gửi.');\n      setEmail('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Lỗi gửi yêu cầu');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      py: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        mb: 2,\n        children: \"Qu\\xEAn m\\u1EADt kh\\u1EA9u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          fullWidth: true,\n          sx: {\n            mt: 3\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 89\n          }, this) : 'Gửi yêu cầu'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"WlgjStke4sPLnfLmIT0G8mJeyDE=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","Container","Paper","TextField","Button","Typography","Alert","CircularProgress","api","toast","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","loading","setLoading","error","setError","handleSubmit","e","preventDefault","post","success","err","_err$response","_err$response$data","response","data","message","maxWidth","sx","py","children","elevation","p","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","severity","onSubmit","fullWidth","label","value","onChange","target","required","type","mt","size","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/AI create CV/client/src/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Paper, TextField, Button, Typography, Alert, CircularProgress } from '@mui/material';\r\nimport api from '../config/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); setError('');\r\n    try {\r\n      await api.post('/auth/forgot-password', { email });\r\n      toast.success('Nếu email tồn tại, một email đặt lại mật khẩu đã được gửi.');\r\n      setEmail('');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Lỗi gửi yêu cầu');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ py: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" mb={2}>Quên mật khẩu</Typography>\r\n        {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField fullWidth label=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 3 }}>{loading ? <CircularProgress size={20} /> : 'Gửi yêu cầu'}</Button>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}