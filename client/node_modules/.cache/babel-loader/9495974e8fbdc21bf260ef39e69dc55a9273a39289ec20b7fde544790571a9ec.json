{"ast":null,"code":"// Utility để test API connection\nimport api from \"../config/api\";\nexport const testAPIConnection = async () => {\n  try {\n    console.log(\"Testing API connection...\");\n    const response = await api.get(\"/auth/status\");\n    console.log(\"✅ API connection successful:\", response.data);\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    console.error(\"❌ API connection failed:\", error.message);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport const testAuthEndpoints = async () => {\n  const endpoints = [{\n    method: \"GET\",\n    url: \"/auth/status\",\n    name: \"Auth Status\"\n  }, {\n    method: \"GET\",\n    url: \"/api/cv\",\n    name: \"CV List\"\n  }];\n  const results = [];\n  for (const endpoint of endpoints) {\n    try {\n      const response = await api[endpoint.method.toLowerCase()](endpoint.url);\n      results.push({\n        endpoint: endpoint.name,\n        status: \"success\",\n        data: response.data\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      results.push({\n        endpoint: endpoint.name,\n        status: \"error\",\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message\n      });\n    }\n  }\n  return results;\n};\n\n// Auto test khi import (chỉ trong development)\nif (process.env.NODE_ENV === \"development\") {\n  // Delay để tránh test ngay khi app khởi động\n  setTimeout(() => {\n    testAPIConnection();\n  }, 2000);\n}","map":{"version":3,"names":["api","testAPIConnection","console","log","response","get","data","success","error","message","testAuthEndpoints","endpoints","method","url","name","results","endpoint","toLowerCase","push","status","_error$response","_error$response$data","process","env","NODE_ENV","setTimeout"],"sources":["C:/Users/ADMIN/Desktop/AI create CV/client/src/utils/apiTest.js"],"sourcesContent":["// Utility để test API connection\r\nimport api from \"../config/api\";\r\n\r\nexport const testAPIConnection = async () => {\r\n  try {\r\n    console.log(\"Testing API connection...\");\r\n    const response = await api.get(\"/auth/status\");\r\n    console.log(\"✅ API connection successful:\", response.data);\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    console.error(\"❌ API connection failed:\", error.message);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\nexport const testAuthEndpoints = async () => {\r\n  const endpoints = [\r\n    { method: \"GET\", url: \"/auth/status\", name: \"Auth Status\" },\r\n    { method: \"GET\", url: \"/api/cv\", name: \"CV List\" },\r\n  ];\r\n\r\n  const results = [];\r\n\r\n  for (const endpoint of endpoints) {\r\n    try {\r\n      const response = await api[endpoint.method.toLowerCase()](endpoint.url);\r\n      results.push({\r\n        endpoint: endpoint.name,\r\n        status: \"success\",\r\n        data: response.data,\r\n      });\r\n    } catch (error) {\r\n      results.push({\r\n        endpoint: endpoint.name,\r\n        status: \"error\",\r\n        error: error.response?.data?.message || error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n// Auto test khi import (chỉ trong development)\r\nif (process.env.NODE_ENV === \"development\") {\r\n  // Delay để tránh test ngay khi app khởi động\r\n  setTimeout(() => {\r\n    testAPIConnection();\r\n  }, 2000);\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,eAAe;AAE/B,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,cAAc,CAAC;IAC9CH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC1D,OAAO;MAAEC,OAAO,EAAE,IAAI;MAAED,IAAI,EAAEF,QAAQ,CAACE;IAAK,CAAC;EAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,OAAO,CAAC;IACxD,OAAO;MAAEF,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMC,SAAS,GAAG,CAChB;IAAEC,MAAM,EAAE,KAAK;IAAEC,GAAG,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC3D;IAAEF,MAAM,EAAE,KAAK;IAAEC,GAAG,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU,CAAC,CACnD;EAED,MAAMC,OAAO,GAAG,EAAE;EAElB,KAAK,MAAMC,QAAQ,IAAIL,SAAS,EAAE;IAChC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,QAAQ,CAACJ,MAAM,CAACK,WAAW,CAAC,CAAC,CAAC,CAACD,QAAQ,CAACH,GAAG,CAAC;MACvEE,OAAO,CAACG,IAAI,CAAC;QACXF,QAAQ,EAAEA,QAAQ,CAACF,IAAI;QACvBK,MAAM,EAAE,SAAS;QACjBb,IAAI,EAAEF,QAAQ,CAACE;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MAAA,IAAAY,eAAA,EAAAC,oBAAA;MACdN,OAAO,CAACG,IAAI,CAAC;QACXF,QAAQ,EAAEA,QAAQ,CAACF,IAAI;QACvBK,MAAM,EAAE,OAAO;QACfX,KAAK,EAAE,EAAAY,eAAA,GAAAZ,KAAK,CAACJ,QAAQ,cAAAgB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBd,IAAI,cAAAe,oBAAA,uBAApBA,oBAAA,CAAsBZ,OAAO,KAAID,KAAK,CAACC;MAChD,CAAC,CAAC;IACJ;EACF;EAEA,OAAOM,OAAO;AAChB,CAAC;;AAED;AACA,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EAC1C;EACAC,UAAU,CAAC,MAAM;IACfxB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,IAAI,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}